---
title: "EDS 223: Homework 4"
subtitle: "TBD"
author: Stephen Carroll
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
  echo: true
format:
  html:
    toc: true
    code-fold: true
editor_options: 
  chunk_output_type: console
---


## Setup
```{r}
# Load libraries
library(sf)
library(here)
library(terra)
library(tmap)
library(tidyverse)
library(viridisLite)
library(RColorBrewer)
library(kableExtra)
library(testthat)
library(patchwork)
library(testthat)
```

## Load Data
```{r}
# Read in data 
west_coast_eez <- read_sf(here("data", "wc_regions_clean.shp"))

depth <- terra::rast(here("data", "depth.tif"))
```


## Prepare data
```{r}
# Compile all our SST rasters into one object
sst_files <- list.files(here("data"), 
                        pattern = "average", 
                        full.names = TRUE)

# Read in sst data and store as a raster stack
sst_stack <- terra::rast(sst_files)

# Add labels to the raster layers
names(sst_stack) <- c("sst2008", "sst2009", "sst2010", "sst2011", "sst2012")

# Preliminary plot
plot(sst_stack)

```

## CRS check

```{r}
# Confirm that the two raster datasets have the same CRS
if(crs(depth) == crs(sst_stack)) { # Raster data  vs raster data
  print("Coordinate reference systems match.")
} else{
  warning("Updating 'sst_stack' coordinate reference system to match 'depth.'")
  sst_stack <- project(sst_stack, crs(depth))  # Project data to match
}

# Confirm that the vector dataset has the same CRS as the raster dataset
if(st_crs(west_coast_eez) == crs(depth)) { # Vector data vs raster data
  print("Coordinate reference systems match")
} else{
  warning("Updating 'west_coast_eez' coordinate reference system to match 'depth'.")
  west_coast_eez <- st_transform(west_coast_eez, st_crs(depth)) # Transform data to match
}
```

```{r}
# Confirm that any conversions were successful with a test
test_that("CRS of all objects are the same", {
  
# Check if CRS of sst_stack matches depth
expect_identical(crs(depth), crs(sst_stack), 
                   info = "CRS of 'sst_stack' does not match 'depth'.")
  
# Check if CRS of west_coast_eez matches depth
expect_identical(st_crs(depth), st_crs(west_coast_eez), 
                   info = "CRS of 'west_coast_eez' does not match 'depth'.")
  
})
```

## Process data
find the mean SST from 2008-2012 (e.g. create single raster of average SST)
convert average SST from Kelvin to Celsius

### Make one raster that is comprised of an average of sea surafce tempertures from 2008 - 2012
```{r}
# depth <- project(depth, crs("EPSG:4326"))
# sst <- project(sst, crs("EPSG:4326"))

# Find average temperature from 2008-2012
mean_sst <- app(sst_stack, fun = mean)

# Convert units from Kelvin to Celsius
mean_sst <- mean_sst - 273.15
```


### Remove bathymetry data that does not lie in the same extent as the temperature data
```{r}
# Crop depth to match the geographic extent of sst
depth_crop <- crop(depth, mean_sst)

# Re-sample depth to match the resolution of sst
depth_resample <- resample(depth_crop, y = mean_sst, method = "near")
```

## Check that the depth and SST rasters match in resolution, extent, and coordinate reference system
```{r}
# Stack the two rasters to confirm they are compatible
depth_sst_stack <- c(depth_resample, mean_sst)

# Confirm they have the same resolution, extent, and CRS
if(all(terra::res(depth_resample) == terra::res(mean_sst))) {
  if(terra::crs(depth_resample) == terra::crs(mean_sst)) {
    if(terra::ext(depth_resample) == terra::ext(mean_sst)){
      print("All match")
    }else{
      stop("extenet does not match")
    }
  }else{
    stop("CRS does not match")
  }
}else{
  stop("Resolution does not match")
}
```

## Find suitable locations

Oysters

Research has shown that oysters and dungeness crabs need the following conditions for optimal growth:

- sea surface temperature: 11-30째C
- depth: 0-70 meters below sea level

Dungeness Crabs

- sea surface temperature 3째C - 19째C, preferred 9째C
  -  5.8 - 9.8, mean 7.8
- depth: 0 - 360 meters below sea level




Reclassify SST and depth data into locations that are suitable for oysters

```{r}
# Create sst reclassification matrix
rcl_sst <- matrix(c(-Inf, 11, NA, # min temperature
                    11, 30, 1, 
                    30, Inf, NA), # max temperature
                    ncol = 3, byrow = TRUE)

# Use reclassification matrix to reclassify sst raster
reclass_sst <- classify(mean_sst, rcl = rcl_sst)
```

```{r}
# Create depth reclassification matrix
rcl_depth <- matrix(c(-Inf, -70, NA, # min depth
                    -70, 0, 1, 
                    0, Inf, NA), # max depth
                    ncol = 3, byrow = TRUE)

# Use reclassification matrix to reclassify depth raster
reclass_depth <- classify(depth_resample, rcl = rcl_depth)
```


```{r}
# Find locations that satisfy both SST and depth conditions
suitable_sst_depth <- lapp(c(reclass_sst, reclass_depth), fun = "*") # Use multiply function. Only cells that both have a 1 will remain a 1

```

## Determine the most suitable EEZ by area

```{r}
# Create a raster of the eez data
west_coast_eez_raster <- rasterize(west_coast_eez, 
                                   suitable_sst_depth, 
                                   field = "rgn") # Transfer the region variable 

```

```{r}
# Quantify area of grid cells suitable for oysters
suitable_area <- cellSize(suitable_sst_depth, # Area that satisfies depth and temperature parameters
                          mask = TRUE, # Keep NAs in output
                          unit = "km") # Match units to eez units

# Sum suitable area by eez region
suitable_eez_area <- zonal(suitable_area, 
      west_coast_eez_raster,
      fun = "sum",
      na.rm = TRUE) 

# Display values in a table
kable(suitable_eez_area, digits = 2, 
        col.names = c("Region","Suitable Area km^2"), # Use LaTex to render the exponent as superscript
        caption = "Suitable Area by Exclusive Economic Zone Region") %>% 
kable_styling(bootstrap_options = "striped",
                position = "center")

```

## Visualize the results

```{r}
# Combine the eez suitable area data with our original eez dataframe
eez_join <- left_join(west_coast_eez, suitable_eez_area, by = "rgn")

# Create a color palette with colorbrewer for bathymetrry data
my_palette2 <- rev(c('#693829FF', '#894B33FF', '#A56A3EFF', '#CFB267FF', '#D9C5B6FF', '#9CA9BAFF', '#5480B5FF', '#3D619DFF', '#405A95FF', '#345084FF'))


oyster_eez_area_map <- tm_shape(depth_crop) +
  tm_raster(palette = my_palette2,
            title = "Bathymetry\n(Meters above or\n below sea level)",
            alpha = 1,
            stretch.palette = FALSE,
            midpoint = 0, #### SHOULD THIS BE NA??? ####
            legend.show = TRUE) +
tm_shape(eez_join, 
         raster.downsample = TRUE) + # Re-sample to lower resolution
  tm_polygons(col = "area",
              palette = "Greens",
              alpha = 0.75,
              title = expression("Suitable habitat area (km"^2*")")) + # Write units as an expression
tm_text("rgn",
        xmod = -0.2,
        size = 0.6,) + # Label each region
tm_compass(size = 1.5,
           position = c("left", "bottom")) +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(legend.outside = TRUE,
          frame = TRUE,
          main.title = "Suitable Oyster Habitat in\nWest Coast Exclusive Economic Zones",
          main.title.size = 1.35,
          main.title.position = c("center", "top"),
          inner.margins = c(0, 0, 0, 0)) # Fit map to extent of frame

# Save the map to a larger image
tmap_save(oyster_eez_area_map, filename = "HW4_files/oyster_eez_area_map.png", width = 2400, height = 1800)
```
<center>
![Suitable Oyster Habitat Map](HW4_files/oyster_eez_area_map.png)

## Generalize my workflow








```{r}
# Create a table for my citations
citations_df = tibble::tribble(
  ~Data,
  ~Citation,
  ~Accesssed,
  ~Link,
 "Sea Surface Temperature Data", "NOAA Coral Reef Watch. 2019, updated daily. NOAA Coral Reef Watch Version 3.1 Daily 5km Satellite Regional Virtual Station Time Series Data. College Park, Maryland, USA: NOAA Coral Reef Watch.", "11/29/24", "[NOAA Coral Reef Watch](https://coralreefwatch.noaa.gov/product/5km/index_5km_ssta.php)",
  "Bathymetry Data", "GEBCO Compilation Group (2022) GEBCO_2022 Grid (doi:10.5285/e0f0bb80-ab44-2739-e053-6c86abc0289c)", "11/29/24", "[GEBCO](https://www.gebco.net/data_and_products/gridded_bathymetry_data/#area)",
  "Exclusive Economic Zones", "Flanders Marine Institute (2024): MarineRegions.org.", "11/29/24", "[Marine Regions](https://www.marineregions.org/eez.php)",
  "Sea Life Base Aquaculture Data", "Palomares, M.L.D. and D. Pauly. Editors. 2024. SeaLifeBase. World Wide Web electronic publication. www.sealifebase.org, version (08/2024).", "11/29/24", "[Sea Life Base](https://www.sealifebase.ca/search.php)"
)

knitr::kable(citations_df, 
             caption = "Data Citations")
```
